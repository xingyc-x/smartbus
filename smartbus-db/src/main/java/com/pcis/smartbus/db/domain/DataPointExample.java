package com.pcis.smartbus.db.domain;

import java.util.ArrayList;
import java.util.List;

public class DataPointExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table data_point
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table data_point
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table data_point
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public DataPointExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public DataPointExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public DataPointExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        DataPointExample example = new DataPointExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public DataPointExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public DataPointExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table data_point
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andPlaceIsNull() {
            addCriterion("place is null");
            return (Criteria) this;
        }

        public Criteria andPlaceIsNotNull() {
            addCriterion("place is not null");
            return (Criteria) this;
        }

        public Criteria andPlaceEqualTo(String value) {
            addCriterion("place =", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andPlaceEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("place = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceNotEqualTo(String value) {
            addCriterion("place <>", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andPlaceNotEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("place <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceGreaterThan(String value) {
            addCriterion("place >", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andPlaceGreaterThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("place > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceGreaterThanOrEqualTo(String value) {
            addCriterion("place >=", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andPlaceGreaterThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("place >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceLessThan(String value) {
            addCriterion("place <", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andPlaceLessThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("place < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceLessThanOrEqualTo(String value) {
            addCriterion("place <=", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andPlaceLessThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("place <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceLike(String value) {
            addCriterion("place like", value, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceNotLike(String value) {
            addCriterion("place not like", value, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceIn(List<String> values) {
            addCriterion("place in", values, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceNotIn(List<String> values) {
            addCriterion("place not in", values, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceBetween(String value1, String value2) {
            addCriterion("place between", value1, value2, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceNotBetween(String value1, String value2) {
            addCriterion("place not between", value1, value2, "place");
            return (Criteria) this;
        }

        public Criteria andUnitIsNull() {
            addCriterion("unit is null");
            return (Criteria) this;
        }

        public Criteria andUnitIsNotNull() {
            addCriterion("unit is not null");
            return (Criteria) this;
        }

        public Criteria andUnitEqualTo(String value) {
            addCriterion("unit =", value, "unit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andUnitEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("unit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitNotEqualTo(String value) {
            addCriterion("unit <>", value, "unit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andUnitNotEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("unit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitGreaterThan(String value) {
            addCriterion("unit >", value, "unit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andUnitGreaterThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("unit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitGreaterThanOrEqualTo(String value) {
            addCriterion("unit >=", value, "unit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andUnitGreaterThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("unit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitLessThan(String value) {
            addCriterion("unit <", value, "unit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andUnitLessThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("unit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitLessThanOrEqualTo(String value) {
            addCriterion("unit <=", value, "unit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andUnitLessThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("unit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnitLike(String value) {
            addCriterion("unit like", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotLike(String value) {
            addCriterion("unit not like", value, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitIn(List<String> values) {
            addCriterion("unit in", values, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotIn(List<String> values) {
            addCriterion("unit not in", values, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitBetween(String value1, String value2) {
            addCriterion("unit between", value1, value2, "unit");
            return (Criteria) this;
        }

        public Criteria andUnitNotBetween(String value1, String value2) {
            addCriterion("unit not between", value1, value2, "unit");
            return (Criteria) this;
        }

        public Criteria andUpperBoundIsNull() {
            addCriterion("upper_bound is null");
            return (Criteria) this;
        }

        public Criteria andUpperBoundIsNotNull() {
            addCriterion("upper_bound is not null");
            return (Criteria) this;
        }

        public Criteria andUpperBoundEqualTo(Float value) {
            addCriterion("upper_bound =", value, "upperBound");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andUpperBoundEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("upper_bound = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpperBoundNotEqualTo(Float value) {
            addCriterion("upper_bound <>", value, "upperBound");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andUpperBoundNotEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("upper_bound <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpperBoundGreaterThan(Float value) {
            addCriterion("upper_bound >", value, "upperBound");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andUpperBoundGreaterThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("upper_bound > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpperBoundGreaterThanOrEqualTo(Float value) {
            addCriterion("upper_bound >=", value, "upperBound");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andUpperBoundGreaterThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("upper_bound >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpperBoundLessThan(Float value) {
            addCriterion("upper_bound <", value, "upperBound");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andUpperBoundLessThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("upper_bound < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpperBoundLessThanOrEqualTo(Float value) {
            addCriterion("upper_bound <=", value, "upperBound");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andUpperBoundLessThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("upper_bound <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpperBoundIn(List<Float> values) {
            addCriterion("upper_bound in", values, "upperBound");
            return (Criteria) this;
        }

        public Criteria andUpperBoundNotIn(List<Float> values) {
            addCriterion("upper_bound not in", values, "upperBound");
            return (Criteria) this;
        }

        public Criteria andUpperBoundBetween(Float value1, Float value2) {
            addCriterion("upper_bound between", value1, value2, "upperBound");
            return (Criteria) this;
        }

        public Criteria andUpperBoundNotBetween(Float value1, Float value2) {
            addCriterion("upper_bound not between", value1, value2, "upperBound");
            return (Criteria) this;
        }

        public Criteria andLowerBoundIsNull() {
            addCriterion("lower_bound is null");
            return (Criteria) this;
        }

        public Criteria andLowerBoundIsNotNull() {
            addCriterion("lower_bound is not null");
            return (Criteria) this;
        }

        public Criteria andLowerBoundEqualTo(Float value) {
            addCriterion("lower_bound =", value, "lowerBound");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andLowerBoundEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("lower_bound = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLowerBoundNotEqualTo(Float value) {
            addCriterion("lower_bound <>", value, "lowerBound");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andLowerBoundNotEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("lower_bound <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLowerBoundGreaterThan(Float value) {
            addCriterion("lower_bound >", value, "lowerBound");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andLowerBoundGreaterThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("lower_bound > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLowerBoundGreaterThanOrEqualTo(Float value) {
            addCriterion("lower_bound >=", value, "lowerBound");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andLowerBoundGreaterThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("lower_bound >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLowerBoundLessThan(Float value) {
            addCriterion("lower_bound <", value, "lowerBound");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andLowerBoundLessThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("lower_bound < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLowerBoundLessThanOrEqualTo(Float value) {
            addCriterion("lower_bound <=", value, "lowerBound");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andLowerBoundLessThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("lower_bound <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLowerBoundIn(List<Float> values) {
            addCriterion("lower_bound in", values, "lowerBound");
            return (Criteria) this;
        }

        public Criteria andLowerBoundNotIn(List<Float> values) {
            addCriterion("lower_bound not in", values, "lowerBound");
            return (Criteria) this;
        }

        public Criteria andLowerBoundBetween(Float value1, Float value2) {
            addCriterion("lower_bound between", value1, value2, "lowerBound");
            return (Criteria) this;
        }

        public Criteria andLowerBoundNotBetween(Float value1, Float value2) {
            addCriterion("lower_bound not between", value1, value2, "lowerBound");
            return (Criteria) this;
        }

        public Criteria andSenderMacIsNull() {
            addCriterion("sender_mac is null");
            return (Criteria) this;
        }

        public Criteria andSenderMacIsNotNull() {
            addCriterion("sender_mac is not null");
            return (Criteria) this;
        }

        public Criteria andSenderMacEqualTo(String value) {
            addCriterion("sender_mac =", value, "senderMac");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andSenderMacEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("sender_mac = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSenderMacNotEqualTo(String value) {
            addCriterion("sender_mac <>", value, "senderMac");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andSenderMacNotEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("sender_mac <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSenderMacGreaterThan(String value) {
            addCriterion("sender_mac >", value, "senderMac");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andSenderMacGreaterThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("sender_mac > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSenderMacGreaterThanOrEqualTo(String value) {
            addCriterion("sender_mac >=", value, "senderMac");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andSenderMacGreaterThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("sender_mac >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSenderMacLessThan(String value) {
            addCriterion("sender_mac <", value, "senderMac");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andSenderMacLessThanColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("sender_mac < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSenderMacLessThanOrEqualTo(String value) {
            addCriterion("sender_mac <=", value, "senderMac");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria andSenderMacLessThanOrEqualToColumn(DataPoint.Column column) {
            addCriterion(new StringBuilder("sender_mac <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSenderMacLike(String value) {
            addCriterion("sender_mac like", value, "senderMac");
            return (Criteria) this;
        }

        public Criteria andSenderMacNotLike(String value) {
            addCriterion("sender_mac not like", value, "senderMac");
            return (Criteria) this;
        }

        public Criteria andSenderMacIn(List<String> values) {
            addCriterion("sender_mac in", values, "senderMac");
            return (Criteria) this;
        }

        public Criteria andSenderMacNotIn(List<String> values) {
            addCriterion("sender_mac not in", values, "senderMac");
            return (Criteria) this;
        }

        public Criteria andSenderMacBetween(String value1, String value2) {
            addCriterion("sender_mac between", value1, value2, "senderMac");
            return (Criteria) this;
        }

        public Criteria andSenderMacNotBetween(String value1, String value2) {
            addCriterion("sender_mac not between", value1, value2, "senderMac");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table data_point
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table data_point
         *
         * @mbg.generated
         */
        private DataPointExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        protected Criteria(DataPointExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public DataPointExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table data_point
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table data_point
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table data_point
         *
         * @mbg.generated
         */
        void example(com.pcis.smartbus.db.domain.DataPointExample example);
    }
}